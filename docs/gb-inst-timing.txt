`LD dest:reg16, src:reg16`
+--------------+--------------+-------+
| Memory       | 16-bit       | 8-bit |
+--------------+--------------+-------+
| opcode = *PC | PC++         |       |
|              | $dest = $src |       |
+--------------+--------------+-------+

`LD dest:reg16, imm16`
+-------------------+--------+-------+
| Memory            | 16-bit | 8-bit |
+-------------------+--------+-------+
| opcode = *PC      | PC++   |       |
| low($dest) = *PC  | PC++   |       |
| high($dest) = *PC | PC++   |       |
+-------------------+--------+-------+

`LD (imm16), SP`
+-----------------+--------+-------+
| Memory          | 16-bit | 8-bit |
+-----------------+--------+-------+
| opcode = *PC    | PC++   |       |
| low(tmp) = *PC  | PC++   |       |
| high(tmp) = *PC | PC++   |       |
| *tmp = low(SP)  | tmp++  |       |
| *tmp = high(SP) |        |       |
+-----------------+--------+-------+

`LD dest:reg8, src:reg8`
+--------------+--------+--------------+
| Memory       | 16-bit | 8-bit        |
+--------------+--------+--------------+
| opcode = *PC | PC++   | $dest = $src |
+--------------+--------+--------------+

`LD dest:reg8, imm8`
+--------------+--------+-------+
| Memory       | 16-bit | 8-bit |
+--------------+--------+-------+
| opcode = *PC | PC++   |       |
| $dest = *PC  | PC++   |       |
+--------------+--------+-------+

`LD dest:reg8, (HL)`
+--------------+--------+-------+
| Memory       | 16-bit | 8-bit |
+--------------+--------+-------+
| opcode = *PC | PC++   |       |
| dest = *HL   |        |       |
+--------------+--------+-------+

`LD A, (src:reg16)`
+--------------+--------+-------+
| Memory       | 16-bit | 8-bit |
+--------------+--------+-------+
| opcode = *PC | PC++   |       |
| A = *$src    |        |       |
+--------------+--------+-------+

`LD (dest:reg16), A`
+--------------+--------+-------+
| Memory       | 16-bit | 8-bit |
+--------------+--------+-------+
| opcode = *PC | PC++   |       |
| *$dest = A   |        |       |
+--------------+--------+-------+

`LD A, (HL+)`
+--------------+--------+-------+
| Memory       | 16-bit | 8-bit |
+--------------+--------+-------+
| opcode = *PC | PC++   |       |
| A = *HL      | HL++   |       |
+--------------+--------+-------+

`LD A, (HL-)`
+--------------+--------+-------+
| Memory       | 16-bit | 8-bit |
+--------------+--------+-------+
| opcode = *PC | PC++   |       |
| A = *HL      | HL--   |       |
+--------------+--------+-------+

`LD (HL+), A`
+--------------+--------+-------+
| Memory       | 16-bit | 8-bit |
+--------------+--------+-------+
| opcode = *PC | PC++   |       |
| *HL = A      | HL++   |       |
+--------------+--------+-------+

`LD (HL-), A`
+--------------+--------+-------+
| Memory       | 16-bit | 8-bit |
+--------------+--------+-------+
| opcode = *PC | PC++   |       |
| *HL = A      | HL--   |       |
+--------------+--------+-------+

`PUSH src:reg16`
+------------------+--------+-------+
| Memory           | 16-bit | 8-bit |
+------------------+--------+-------+
| opcode = *PC     | PC++   |       |
|                  | SP--   |       |
| *SP = high($src) | SP--   |       |
| *SP = low($src)  |        |       |
+------------------+--------+-------+

`POP dest:reg16`
+-------------------+--------+-------+
| Memory            | 16-bit | 8-bit |
+-------------------+--------+-------+
| opcode = *PC      | PC++   |       |
| high($dest) = *SP | SP++   |       |
| low($dest) = *SP  | SP++   |       |
+-------------------+--------+-------+

`RST addr_low:0x{00,08,10,18,20,28,30,38}`
+-----------------+----------------------+-------+
| Memory          | 16-bit               | 8-bit |
+-----------------+----------------------+-------+
| opcode = *PC    | PC++                 |       |
|                 | SP--                 |       |
| *SP = high(PC)  | SP--                 |       |
| *SP = low(PC)   | PC = addr_low as u16 |       |
+-----------------+----------------------+-------+

`CALL imm16`
+-----------------+----------+-------+
| Memory          | 16-bit   | 8-bit |
+-----------------+----------+-------+
| opcode = *PC    | PC++     |       |
| low(tmp) = *PC  | PC++     |       |
| high(tmp) = *PC | PC++     |       |
|                 | SP--     |       |
| *SP = high(PC)  | SP--     |       |
| *SP = low(PC)   | PC = tmp |       |
+-----------------+----------+-------+

`CALL cond, imm16`
+-----------------+----------+-------+-------+
| Memory          | 16-bit   | 8-bit | Cond  |
+-----------------+----------+-------+-------+
| opcode = *PC    | PC++     |       |XXXXXXX|
| low(tmp) = *PC  | PC++     |       |       |
| high(tmp) = *PC | PC++     |       | Check |
|                 | SP--     |       |       |
| *SP = high(PC)  | SP--     |       |       |
| *SP = low(PC)   | PC = tmp |       |       |
+-----------------+----------+-------+-------+

`RET`
+-----------------+----------+-------+
| Memory          | 16-bit   | 8-bit |
+-----------------+----------+-------+
| opcode = *PC    | PC++     |       |
| low(tmp) = *SP  | SP++     |       |
| high(tmp) = *SP | SP++     |       |
|                 | PC = tmp |       |
+-----------------+----------+-------+

`RET cond`
+-----------------+----------+-------+-------+
| Memory          | 16-bit   | 8-bit | Cond  |
+-----------------+----------+-------+-------+
| opcode = *PC    | PC++     |       |XXXXXXX|
|                 |          |       | Check |
| low(tmp) = *SP  | SP++     |       |       |
| high(tmp) = *SP | SP++     |       |       |
|                 | PC = tmp |       |       |
+-----------------+----------+-------+-------+

`JP HL`
+-----------------+----------+-------+
| Memory          | 16-bit   | 8-bit |
+-----------------+----------+-------+
| opcode = *PC    | PC = HL  |       |
+-----------------+----------+-------+

`JP imm16`
+-----------------+----------+-------+
| Memory          | 16-bit   | 8-bit |
+-----------------+----------+-------+
| opcode = *PC    | PC++     |       |
| low(tmp) = *PC  | PC++     |       |
| high(tmp) = *PC | PC++     |       |
|                 | PC = tmp |       |
+-----------------+----------+-------+

`JP cond, imm16`
+-----------------+----------+-------+-------+
| Memory          | 16-bit   | 8-bit | Cond  |
+-----------------+----------+-------+-------+
| opcode = *PC    | PC++     |       |XXXXXXX|
| low(tmp) = *PC  | PC++     |       |       |
| high(tmp) = *PC | PC++     |       | Check |
|                 | PC = tmp |       |       |
+-----------------+----------+-------+-------+

`JR signed_imm8`
+-----------------+---------------+-------+
| Memory          | 16-bit        | 8-bit |
+-----------------+---------------+-------+
| opcode = *PC    | PC++          |       |
| tmp = *PC       | PC++          |       |
|                 | PC = PC + tmp |       |
+-----------------+---------------+-------+

`JR cond, signed_imm8`
+-----------------+---------------+-------+-------+
| Memory          | 16-bit        | 8-bit | Cond  |
+-----------------+---------------+-------+-------+
| opcode = *PC    | PC++          |       |XXXXXXX|
| tmp = *PC       | PC++          |       | Check |
|                 | PC = PC + tmp |       |       |
+-----------------+---------------+-------+-------+

`LD HL, SP + signed_imm8`
+--------------+---------------+-------+
| Memory       | 16-bit        | 8-bit |
+--------------+---------------+-------+
| opcode = *PC | PC++          |       |
| tmp = *PC    | PC++          |       |
|              | HL = SP + tmp |       |
+--------------+---------------+-------+

`ADD SP, signed_imm8` (aka `LD SP, SP + signed_imm8`)
+--------------+---------------+-------+
| Memory       | 16-bit        | 8-bit |
+--------------+---------------+-------+
| opcode = *PC | PC++          |       |
| tmp = *PC    | PC++          |       |
|              | SP = SP + tmp |       |
|              | ???           | ???   |
+--------------+---------------+-------+

`op:{ADD,ADC,SUB,SBC,AND,XOR,OR,CP} rhs:reg8`
+--------------+--------+-------------+
| Memory       | 16-bit | 8-bit       |
+--------------+--------+-------------+
| opcode = *PC | PC++   | A $op= $rhs |
+--------------+--------+-------------+

`op:{ADD,ADC,SUB,SBC,AND,XOR,OR,CP} imm8`
+--------------+--------+-------------+
| Memory       | 16-bit | 8-bit       |
+--------------+--------+-------------+
| opcode = *PC | PC++   |             |
| tmp = *PC    | PC++   | A $op= tmp  |
+--------------+--------+-------------+

`op:{ADD,ADC,SUB,SBC,AND,XOR,OR,CP} (HL)`
+-----------------+--------+------------+
| Memory          | 16-bit | 8-bit      |
+-----------------+--------+------------+
| opcode = *PC    | PC++   |            |
| tmp = *HL       |        | A $op= tmp |
+-----------------+--------+------------+

`STOP 0`
TODO


